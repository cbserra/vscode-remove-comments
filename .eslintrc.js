/*
ðŸ‘‹ Hi! This file was autogenerated by tslint-to-eslint-config.
https://github.com/typescript-eslint/tslint-to-eslint-config

It represents the closest reasonable ESLint configuration to this
project's original TSLint configuration.

We recommend eventually switching this configuration to extend from
the recommended rulesets in typescript-eslint. 
https://github.com/typescript-eslint/tslint-to-eslint-config/blob/master/docs/FAQs.md

Happy linting! ðŸ’–
*/
module.exports = {
    "env": {
        "browser": true,
        "es6": true,
        "node": true
    },
    "parser": "@typescript-eslint/parser",
    "plugins": [
        "@typescript-eslint"
    ],
    "overrides": [
        {
          "files": ['*.ts', '*.tsx'], // Your TypeScript files extension
    
          // As mentioned in the comments, you should extend TypeScript plugins here,
          // instead of extending them outside the `overrides`.
          // If you don't want to extend any rules, you don't need an `extends` attribute.
          "extends": [
            'eslint:recommended',
            'plugin:@typescript-eslint/recommended',
            "prettier"
          ],
    
          "parserOptions": {
            "project": ['./tsconfig.json'], // Specify it only for TypeScript files
            "sourceType": "module"
          },

          "rules": {
            "@typescript-eslint/member-delimiter-style": [
                "warn",
                {
                    "multiline": {
                        "delimiter": "semi",
                        "requireLast": true
                    },
                    "singleline": {
                        "delimiter": "semi",
                        "requireLast": false
                    }
                }
            ],
            "@typescript-eslint/naming-convention": "warn",
            "@typescript-eslint/no-unused-expressions": "warn",
            "@typescript-eslint/semi": [
                "warn",
                "always"
            ],
            "curly": "warn",
            "eqeqeq": [
                "warn",
                "always"
            ],
            "no-redeclare": "warn",
            "no-throw-literal": "warn",
            "no-unused-expressions": "warn",
            "semi": "warn"
        }
          
        },
      ],
    "root": true,
    
};
